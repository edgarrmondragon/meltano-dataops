name: Meltano Pipeline

on:
  pull_request:
    paths:
      - tranform/models/**.sql
  push:
    branches: [master]
    paths:
      - tranform/models/**.sql
  workflow_dispatch:
    inputs:
      environment:
        description: Meltano Environment
        required: true
        default: prod
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

env:
  MELTANO_ENVIRONMENT: ${{ github.event.inputs.environment || 'prod' }}
  MELTANO_CLI_LOG_LEVEL: ${{ github.event.inputs.logLevel || 'warning' }}

jobs:
  meltano-run:
    if: "github.event_name == 'workflow_dispatch'"
    name: Meltano Run Pipeline for ${{ matrix.source }}
    runs-on: ubuntu-latest
    container:
      image: meltano/meltano:v1.103.1-python3.9
      env:
        TAP_POCKET_CONSUMER_KEY: ${{ secrets.TAP_POCKET_CONSUMER_KEY }}
        TAP_POCKET_ACCESS_TOKEN: ${{ secrets.TAP_POCKET_ACCESS_TOKEN }}
    strategy:
      matrix:
        include:
          - { source: "Pocket", tap: "tap-pocket" }
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2

      - name: Check Meltano
        run: |
          meltano --version

      - name: Install Plugins
        run: |
          meltano install

      - name: Run
        run: |
          meltano run ${{ matrix.tap }} target-sqlite

      - name: Upload ${{ matrix.source }} Data
        uses: actions/upload-artifact@v3.0.0
        with:
          name: raw-data
          path: output/*/*.db

  transform:
    name: Data Transformation with dbt-sqlite
    runs-on: ubuntu-latest
    needs: meltano-run
    container:
      image: meltano/meltano:v1.103.1-python3.9

    steps:
      - name: Checkout code
        uses: actions/checkout@v3.0.2

      - name: Check Meltano
        run: |
          meltano --version

      - name: Install dbt-sqlite
        run: |
          meltano install transformer dbt-sqlite

      - name: Download raw data
        uses: actions/download-artifact@v3.0.0
        with:
          name: raw-data
          path: "output/"

      - name: List data files
        run: |
          ls "output/${{ github.event.inputs.environment || 'prod' }}"

      - name: Lint
        continue-on-error: true
        run: |
          meltano run dbt-sqlite:lint

      - name: Transform
        run: |
          meltano run dbt-sqlite:run

      - name: Test Data
        run: |
          meltano test dbt-sqlite

      - name: Upload Data Warehouse
        uses: actions/upload-artifact@v3.0.0
        with:
          name: data-warehouse
          path: output/*/warehouse.db
